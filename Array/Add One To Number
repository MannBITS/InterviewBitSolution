/*
Given a non-negative number represented as an array of digits,

add 1 to the number ( increment the number represented by the digits ).

The digits are stored such that the most significant digit is at the head of the list.
*/


vector<int> plusOne(vector<int> &digit) {
            reverse(digit.begin(), digit.end());
            vector<int> ans;
            int carry = 1;
            for (int i = 0; i < digit.size(); i++) {
                int sum = digit[i] + carry;
                ans.push_back(sum%10);
                carry = sum / 10;
            }
            while (carry) {
                ans.push_back(carry%10);
                carry /= 10;
            }
            while (ans[ans.size() - 1] == 0 && ans.size() > 1) {
                ans.pop_back();
            }
            reverse(ans.begin(), ans.end());
            reverse(digit.begin(), digit.end());
            return ans;
        }
